{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNwM01oB47Kl9kNWiTXQjma",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/HedersonSantos/age-related/blob/main/analise\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 35,
      "metadata": {
        "id": "teBVyf61ILhw"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "sns.set(rc={'figure.figsize':(11.7,8.27)})\n",
        "palette = sns.color_palette(\"bright\", 10)\n",
        "\n",
        "pd.set_option('display.max_columns', None)\n",
        "pd.set_option('display.max_rows', None)\n",
        "pd.set_option('max_colwidth', None)\n",
        "\n",
        "#pd.options.mode.use_inf_as_na = True"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#!wget https://raw.githubusercontent.com/HedersonSantos/age-related/main/train.csv"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dXbkwzCWMUWb",
        "outputId": "dd45ba94-2b36-43d8-f035-fa3db05c2241"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "--2023-05-13 17:38:35--  https://raw.githubusercontent.com/HedersonSantos/age-related/main/train.csv\n",
            "Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n",
            "Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 336555 (329K) [text/plain]\n",
            "Saving to: ‘train.csv.1’\n",
            "\n",
            "\rtrain.csv.1           0%[                    ]       0  --.-KB/s               \rtrain.csv.1         100%[===================>] 328.67K  --.-KB/s    in 0.04s   \n",
            "\n",
            "2023-05-13 17:38:35 (9.03 MB/s) - ‘train.csv.1’ saved [336555/336555]\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#fazer upload do train\n",
        "df = pd.read_csv('train.csv')\n",
        "df.head(10)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 456
        },
        "id": "3ZRdzWdhI4r6",
        "outputId": "eb1177c0-7ee9-4465-8fef-76af32e3ec63"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "             Id        AB          AF          AH         AM         AR  \\\n",
              "0  000ff2bfdfe9  0.209377  3109.03329   85.200147  22.394407   8.138688   \n",
              "1  007255e47698  0.145282   978.76416   85.200147  36.968889   8.138688   \n",
              "2  013f2bd269f5  0.470030  2635.10654   85.200147  32.360553   8.138688   \n",
              "3  043ac50845d5  0.252107  3819.65177  120.201618  77.112203   8.138688   \n",
              "4  044fb8a146ec  0.380297  3733.04844   85.200147  14.103738   8.138688   \n",
              "5  04517a3c90bd  0.209377  2615.81430   85.200147   8.541526   8.138688   \n",
              "6  049232ca8356  0.348249  1733.65412   85.200147   8.377385  15.312480   \n",
              "7  057287f2da6d  0.269199   966.45483   85.200147  21.174189   8.138688   \n",
              "8  0594b00fb30a  0.346113  3238.43674   85.200147  28.888816   8.138688   \n",
              "9  05f2bc0155cd  0.324748  5188.68207   85.200147  12.968687   8.138688   \n",
              "\n",
              "         AX        AY         AZ          BC  ...        FL        FR  \\\n",
              "0  0.699861  0.025578   9.812214    5.555634  ...  7.298162   1.73855   \n",
              "1  3.632190  0.025578  13.517790    1.229900  ...  0.173229   0.49706   \n",
              "2  6.732840  0.025578  12.824570    1.229900  ...  7.709560   0.97556   \n",
              "3  3.685344  0.025578  11.053708    1.229900  ...  6.122162   0.49706   \n",
              "4  3.942255  0.054810   3.396778  102.151980  ...  8.153058  48.50134   \n",
              "5  4.013127  0.025578  12.547282    1.229900  ...  0.173229   0.49706   \n",
              "6  1.913544  0.025578   6.547778    1.229900  ...  4.408484   0.86130   \n",
              "7  4.987617  0.025578   9.408886    1.229900  ...  6.591896   0.49706   \n",
              "8  4.021986  0.025578   8.243016    3.626448  ...  4.762291   1.18262   \n",
              "9  4.593392  0.025578  10.685041    1.229900  ...  0.173229   1.57151   \n",
              "\n",
              "         FS         GB          GE            GF         GH          GI  \\\n",
              "0  0.094822  11.339138   72.611063   2003.810319  22.136229   69.834944   \n",
              "1  0.568932   9.292698   72.611063  27981.562750  29.135430   32.131996   \n",
              "2  1.198821  37.077772   88.609437  13676.957810  28.022851   35.192676   \n",
              "3  0.284466  18.529584   82.416803   2094.262452  39.948656   90.493248   \n",
              "4  0.121914  16.408728  146.109943   8524.370502  45.381316   36.262628   \n",
              "5  1.164956  21.915512   72.611063  24177.595550  28.525186   82.527764   \n",
              "6  0.467337  17.878444  192.453107   3332.467494  34.166222  100.086808   \n",
              "7  0.277693  18.445866  109.693986  21371.759850  35.208102   31.424696   \n",
              "8  0.067730  17.245908  147.218610   4589.611956  29.771721   54.675576   \n",
              "9  0.318331  24.515421   98.929757   5563.130949  21.994831   33.300970   \n",
              "\n",
              "          GL  Class  \n",
              "0   0.120343      1  \n",
              "1  21.978000      0  \n",
              "2   0.196941      0  \n",
              "3   0.155829      0  \n",
              "4   0.096614      1  \n",
              "5  21.978000      0  \n",
              "6   0.065096      0  \n",
              "7   0.092873      0  \n",
              "8   0.073416      0  \n",
              "9  21.978000      0  \n",
              "\n",
              "[10 rows x 58 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-3489aa36-43a8-4246-9cd6-1dccd18b882f\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Id</th>\n",
              "      <th>AB</th>\n",
              "      <th>AF</th>\n",
              "      <th>AH</th>\n",
              "      <th>AM</th>\n",
              "      <th>AR</th>\n",
              "      <th>AX</th>\n",
              "      <th>AY</th>\n",
              "      <th>AZ</th>\n",
              "      <th>BC</th>\n",
              "      <th>...</th>\n",
              "      <th>FL</th>\n",
              "      <th>FR</th>\n",
              "      <th>FS</th>\n",
              "      <th>GB</th>\n",
              "      <th>GE</th>\n",
              "      <th>GF</th>\n",
              "      <th>GH</th>\n",
              "      <th>GI</th>\n",
              "      <th>GL</th>\n",
              "      <th>Class</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>000ff2bfdfe9</td>\n",
              "      <td>0.209377</td>\n",
              "      <td>3109.03329</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>22.394407</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>0.699861</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>9.812214</td>\n",
              "      <td>5.555634</td>\n",
              "      <td>...</td>\n",
              "      <td>7.298162</td>\n",
              "      <td>1.73855</td>\n",
              "      <td>0.094822</td>\n",
              "      <td>11.339138</td>\n",
              "      <td>72.611063</td>\n",
              "      <td>2003.810319</td>\n",
              "      <td>22.136229</td>\n",
              "      <td>69.834944</td>\n",
              "      <td>0.120343</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>007255e47698</td>\n",
              "      <td>0.145282</td>\n",
              "      <td>978.76416</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>36.968889</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>3.632190</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>13.517790</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>0.173229</td>\n",
              "      <td>0.49706</td>\n",
              "      <td>0.568932</td>\n",
              "      <td>9.292698</td>\n",
              "      <td>72.611063</td>\n",
              "      <td>27981.562750</td>\n",
              "      <td>29.135430</td>\n",
              "      <td>32.131996</td>\n",
              "      <td>21.978000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>013f2bd269f5</td>\n",
              "      <td>0.470030</td>\n",
              "      <td>2635.10654</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>32.360553</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>6.732840</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>12.824570</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>7.709560</td>\n",
              "      <td>0.97556</td>\n",
              "      <td>1.198821</td>\n",
              "      <td>37.077772</td>\n",
              "      <td>88.609437</td>\n",
              "      <td>13676.957810</td>\n",
              "      <td>28.022851</td>\n",
              "      <td>35.192676</td>\n",
              "      <td>0.196941</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>043ac50845d5</td>\n",
              "      <td>0.252107</td>\n",
              "      <td>3819.65177</td>\n",
              "      <td>120.201618</td>\n",
              "      <td>77.112203</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>3.685344</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>11.053708</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>6.122162</td>\n",
              "      <td>0.49706</td>\n",
              "      <td>0.284466</td>\n",
              "      <td>18.529584</td>\n",
              "      <td>82.416803</td>\n",
              "      <td>2094.262452</td>\n",
              "      <td>39.948656</td>\n",
              "      <td>90.493248</td>\n",
              "      <td>0.155829</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>044fb8a146ec</td>\n",
              "      <td>0.380297</td>\n",
              "      <td>3733.04844</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>14.103738</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>3.942255</td>\n",
              "      <td>0.054810</td>\n",
              "      <td>3.396778</td>\n",
              "      <td>102.151980</td>\n",
              "      <td>...</td>\n",
              "      <td>8.153058</td>\n",
              "      <td>48.50134</td>\n",
              "      <td>0.121914</td>\n",
              "      <td>16.408728</td>\n",
              "      <td>146.109943</td>\n",
              "      <td>8524.370502</td>\n",
              "      <td>45.381316</td>\n",
              "      <td>36.262628</td>\n",
              "      <td>0.096614</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>04517a3c90bd</td>\n",
              "      <td>0.209377</td>\n",
              "      <td>2615.81430</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>8.541526</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>4.013127</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>12.547282</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>0.173229</td>\n",
              "      <td>0.49706</td>\n",
              "      <td>1.164956</td>\n",
              "      <td>21.915512</td>\n",
              "      <td>72.611063</td>\n",
              "      <td>24177.595550</td>\n",
              "      <td>28.525186</td>\n",
              "      <td>82.527764</td>\n",
              "      <td>21.978000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>049232ca8356</td>\n",
              "      <td>0.348249</td>\n",
              "      <td>1733.65412</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>8.377385</td>\n",
              "      <td>15.312480</td>\n",
              "      <td>1.913544</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>6.547778</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>4.408484</td>\n",
              "      <td>0.86130</td>\n",
              "      <td>0.467337</td>\n",
              "      <td>17.878444</td>\n",
              "      <td>192.453107</td>\n",
              "      <td>3332.467494</td>\n",
              "      <td>34.166222</td>\n",
              "      <td>100.086808</td>\n",
              "      <td>0.065096</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>057287f2da6d</td>\n",
              "      <td>0.269199</td>\n",
              "      <td>966.45483</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>21.174189</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>4.987617</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>9.408886</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>6.591896</td>\n",
              "      <td>0.49706</td>\n",
              "      <td>0.277693</td>\n",
              "      <td>18.445866</td>\n",
              "      <td>109.693986</td>\n",
              "      <td>21371.759850</td>\n",
              "      <td>35.208102</td>\n",
              "      <td>31.424696</td>\n",
              "      <td>0.092873</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>0594b00fb30a</td>\n",
              "      <td>0.346113</td>\n",
              "      <td>3238.43674</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>28.888816</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>4.021986</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>8.243016</td>\n",
              "      <td>3.626448</td>\n",
              "      <td>...</td>\n",
              "      <td>4.762291</td>\n",
              "      <td>1.18262</td>\n",
              "      <td>0.067730</td>\n",
              "      <td>17.245908</td>\n",
              "      <td>147.218610</td>\n",
              "      <td>4589.611956</td>\n",
              "      <td>29.771721</td>\n",
              "      <td>54.675576</td>\n",
              "      <td>0.073416</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>05f2bc0155cd</td>\n",
              "      <td>0.324748</td>\n",
              "      <td>5188.68207</td>\n",
              "      <td>85.200147</td>\n",
              "      <td>12.968687</td>\n",
              "      <td>8.138688</td>\n",
              "      <td>4.593392</td>\n",
              "      <td>0.025578</td>\n",
              "      <td>10.685041</td>\n",
              "      <td>1.229900</td>\n",
              "      <td>...</td>\n",
              "      <td>0.173229</td>\n",
              "      <td>1.57151</td>\n",
              "      <td>0.318331</td>\n",
              "      <td>24.515421</td>\n",
              "      <td>98.929757</td>\n",
              "      <td>5563.130949</td>\n",
              "      <td>21.994831</td>\n",
              "      <td>33.300970</td>\n",
              "      <td>21.978000</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>10 rows × 58 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3489aa36-43a8-4246-9cd6-1dccd18b882f')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-3489aa36-43a8-4246-9cd6-1dccd18b882f button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-3489aa36-43a8-4246-9cd6-1dccd18b882f');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mhtJNpO1LR-5",
        "outputId": "dae60325-e501-4742-aef7-2533a5e9787d"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 617 entries, 0 to 616\n",
            "Data columns (total 58 columns):\n",
            " #   Column  Non-Null Count  Dtype  \n",
            "---  ------  --------------  -----  \n",
            " 0   Id      617 non-null    object \n",
            " 1   AB      617 non-null    float64\n",
            " 2   AF      617 non-null    float64\n",
            " 3   AH      617 non-null    float64\n",
            " 4   AM      617 non-null    float64\n",
            " 5   AR      617 non-null    float64\n",
            " 6   AX      617 non-null    float64\n",
            " 7   AY      617 non-null    float64\n",
            " 8   AZ      617 non-null    float64\n",
            " 9   BC      617 non-null    float64\n",
            " 10  BD      617 non-null    float64\n",
            " 11  BN      617 non-null    float64\n",
            " 12  BP      617 non-null    float64\n",
            " 13  BQ      557 non-null    float64\n",
            " 14  BR      617 non-null    float64\n",
            " 15  BZ      617 non-null    float64\n",
            " 16  CB      615 non-null    float64\n",
            " 17  CC      614 non-null    float64\n",
            " 18  CD      617 non-null    float64\n",
            " 19  CF      617 non-null    float64\n",
            " 20  CH      617 non-null    float64\n",
            " 21  CL      617 non-null    float64\n",
            " 22  CR      617 non-null    float64\n",
            " 23  CS      617 non-null    float64\n",
            " 24  CU      617 non-null    float64\n",
            " 25  CW      617 non-null    float64\n",
            " 26  DA      617 non-null    float64\n",
            " 27  DE      617 non-null    float64\n",
            " 28  DF      617 non-null    float64\n",
            " 29  DH      617 non-null    float64\n",
            " 30  DI      617 non-null    float64\n",
            " 31  DL      617 non-null    float64\n",
            " 32  DN      617 non-null    float64\n",
            " 33  DU      616 non-null    float64\n",
            " 34  DV      617 non-null    float64\n",
            " 35  DY      617 non-null    float64\n",
            " 36  EB      617 non-null    float64\n",
            " 37  EE      617 non-null    float64\n",
            " 38  EG      617 non-null    float64\n",
            " 39  EH      617 non-null    float64\n",
            " 40  EJ      617 non-null    object \n",
            " 41  EL      557 non-null    float64\n",
            " 42  EP      617 non-null    float64\n",
            " 43  EU      617 non-null    float64\n",
            " 44  FC      616 non-null    float64\n",
            " 45  FD      617 non-null    float64\n",
            " 46  FE      617 non-null    float64\n",
            " 47  FI      617 non-null    float64\n",
            " 48  FL      616 non-null    float64\n",
            " 49  FR      617 non-null    float64\n",
            " 50  FS      615 non-null    float64\n",
            " 51  GB      617 non-null    float64\n",
            " 52  GE      617 non-null    float64\n",
            " 53  GF      617 non-null    float64\n",
            " 54  GH      617 non-null    float64\n",
            " 55  GI      617 non-null    float64\n",
            " 56  GL      616 non-null    float64\n",
            " 57  Class   617 non-null    int64  \n",
            "dtypes: float64(55), int64(1), object(2)\n",
            "memory usage: 279.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "col_null=[]\n",
        "for c in df.columns:\n",
        "  if len(df[df[c].isnull()])==0: continue\n",
        "  col_null.append(c)\n",
        "\n",
        "col_null"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MuUpb8H9M5nJ",
        "outputId": "0273822f-db25-4473-8958-a6ca68347b63"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "[]"
            ]
          },
          "metadata": {},
          "execution_count": 59
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for c in col_null:\n",
        "  mediana = df[c].median()\n",
        "  df[c].fillna(mediana, inplace = True)"
      ],
      "metadata": {
        "id": "FNdq8pDybnV5"
      },
      "execution_count": 58,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def graficoFrequencia(coluna, df_dados):\n",
        "  if type(coluna)==list:\n",
        "    column=coluna\n",
        "  else:\n",
        "    column=[coluna]\n",
        "  df = df_dados[column].value_counts().reset_index().rename(columns={0:'qtd_registros'})\n",
        "  fig, ax =plt.subplots(figsize=(18, 8), sharex=True)\n",
        "  for c in column:\n",
        "    sns.barplot(x=c,y='qtd_registros', data=df,orient='v', ax = ax).set_title(f\"distribuição da variável {c}\")\n",
        "  for bar in ax.patches:\n",
        "    ax.annotate(format(bar.get_height(),'.0f'),\n",
        "                    (bar.get_x() + bar.get_width() / 2,\n",
        "                      bar.get_height()), ha='center', va='center',\n",
        "                    size=10, xytext=(0, 8),\n",
        "                    textcoords='offset points')\n",
        "  for item in ax.get_xticklabels():\n",
        "      item.set_rotation(90)"
      ],
      "metadata": {
        "id": "XkxkkVHgbE93"
      },
      "execution_count": 33,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "graficoFrequencia('Class', df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 468
        },
        "id": "Odgf07hAbGwd",
        "outputId": "359207ed-d410-480d-f433-ec8ea35f590b"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1800x800 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "RvhO6lkFeDdn"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}